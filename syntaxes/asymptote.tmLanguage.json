{"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json", "scopeName": "source.asymptote", "name": "Asymptote", "foldingStartMarker": "(\\{|\\[|\\()\\s*$", "foldingStopMarker": "^\\s*(\\}|\\]\\))", "repository": {"const_keywords": {"match": "\\b(settings|dotted|viewportsize|arrowhookfactor|heavygrey|legendlinelength|MarkPath|CW|colorPen|arrowfactor|dotfactor|Allow|monoPen|CCW|arrowbarb|paleblue|camerafactor|spinner|JOIN_IN|palemagenta|realEpsilon|deepblue|darkblue|DefaultHead|bracemidangle|identity4|_outpipe|down|Dotted|cm|darkred|orange|dot|longdashdotted|white|up|heavymagenta|heavyblue|mediumyellow|black|VERSION|deepgray|dotframe|pi|intMax|lightgrey|palered|red|MarkFillable|mediumgrey|braceouterangle|longdashed|defaultfilename|fuchsia|Aspect|arrowangle|realMin|defaultseparator|EndPoint|arcarrowfactor|NoSide|nullpen|version|RightSide|darkbrown|lightblue|legendmargin|SSW|W|pink|arrow2sizelimit|extendcap|mediumred|dashdotted|Mark|arrowdir|stdin|plain_bounds|mediummagenta|mediumblue|mm|NW|UnFill|JOIN_OUT|darkcyan|currentpatterns|mediumgray|darkgrey|RELEASE|S|invert|count|file3|HookHead|deepgrey|solid|Black|viewportmargin|currentlight|intMin|deepgreen|implicitshipout|deepyellow|realDigits|inch|palegreen|palegrey|dotfilltype|TeXHead|nan|evenodd|NNE|IgnoreAspect|heavygray|SE|FillDraw|roundcap|bracedefaultratio|randMax|magenta|currentpen|E|cputimeformat|nobasealign|lightgreen|circleprecision|MoveQuiet|arcarrowangle|Magenta|NoAlign|barfactor|chartreuse|arrowtexfactor|SSE|NNW|salmon|legendmaxrelativewidth|plain|mantissaBits|basealign|paleyellow|squarepen|inches|Fill|miterjoin|brown|darkmagenta|legendvskip|lightmagenta|arrowsizelimit|deepred|olive|labelmargin|diamond|Cyan|expansionfactor|defaultformat|mediumcyan|ocgindex|palegray|MidPoint|plus|SuppressQuiet|realMax|heavygreen|royalblue|Align|palecyan|ENE|braceinnerangle|ESE|darkgray|heavycyan|stdout|debuggerlines|debugging|lightgray|zeroTransform|undefined|BeginPoint|deepcyan|inf|Center|N|cyan|I|grey|springgreen|WSW|ignore|roundjoin|unitsquare|yellow|lightyellow|lightcyan|NoFill|lightred|pt|identity|legendhskip|defaultpen|invisible|WNW|mediumgreen|Label|bp|darkolive|zerowinding|SimpleHead|infinity|blue|currentprojection|SW|unitcircle|nullpath|MarkFill|default|lightolive|Yellow|darkgreen|currentpicture|heavyred|sqrtEpsilon|gray|Suppress|arrowlength|green|nomarker|purple|Move|deepmagenta|left|squarecap|Draw|LeftSide|dashed|beveljoin|right|NE|circlescale)\\b", "name": "support.constant"}, "type_keywords": {"match": "\\b(position|Legend|side|bool|realschur|triple|hsv|cputime|align|slice|real|pen|processtime|int|Label|light|filltype|marginT|frame|schur|node|transformation|coord|string|pairOrTriple|coords2|bounds|object|path|path3|picture|transform|autoscaleT|projection|arrowhead|scaling|pair|marker|coords3|scaleT|ScaleT|file|guide|bool3)\\b", "name": "support.class"}, "operator_keywords": {"match": "(\\||<|\\+|>|%|\\-\\-\\-|/|!|::|\\^|!=|\\#|\\.\\.|=|,|>=|==|\\-\\-|\\*|\\&|<=|\\-)", "name": "keyword.operator"}, "prim_type_keywords": {"match": "\\b(code|void)\\b", "name": "storage.type"}}, "patterns": [{"begin": "^\\s*(typedef)\\s+(import)\\s*\\(", "end": "\\)", "beginCaptures": {"1": {"name": "storage.modifier"}, "2": {"name": "keyword.other"}}, "patterns": [{"name": "variable", "match": "[a-zA-Z_]\\w*"}], "name": "meta.storage"}, {"begin": "^\\s*(access)\\s+((?:\".*?(?<!\\\\)\")|(?:'.*?(?<!\\\\)')|(?:[a-zA-Z_]\\w*))\\s*\\(", "end": "\\)\\s*(as)\\s+([a-zA-Z_]\\w*)\\s*;", "beginCaptures": {"1": {"name": "keyword.other"}, "2": {"name": "support.class"}}, "endCaptures": {"1": {"name": "keyword.other"}, "2": {"name": "support.class"}}, "name": "meta.support", "patterns": [{"match": "([a-zA-Z_]\\w*)=([a-zA-Z_]\\w*(?:\\[])?)", "captures": {"1": {"name": "variable.parameter"}, "2": {"name": "support.class"}}}]}, {"begin": "^\\s*(from)\\s+((?:\".*?(?<!\\\\)\")|(?:'.*?(?<!\\\\)')|(?:[a-zA-Z_]\\w*))\\s*\\(", "end": "\\)", "beginCaptures": {"1": {"name": "keyword.other"}, "2": {"name": "support.class"}}, "patterns": [{"match": "([a-zA-Z_]\\w*)=([a-zA-Z_]\\w*(?:\\[])?)", "captures": {"1": {"name": "variable.parameter"}, "2": {"name": "support.class"}}}]}, {"begin": "(?<=\\)\\s*)(access)", "end": ";", "beginCaptures": {"1": {"name": "keyword.other"}}, "name": "meta.support", "patterns": [{"match": "\\b(operator)\\b\\s*.*(?!(\\s|,|;))", "captures": {"1": {"name": "keyword.other"}}}, {"match": "([a-zA-Z_]\\w*)\\s+(as)\\s+([a-zA-Z_]\\w*)", "captures": {"1": {"name": "support.class"}, "2": {"name": "keyword.other"}, "3": {"name": "support.class"}}}, {"match": "[a-zA-Z_]\\w*", "name": "support.class"}]}, {"match": "//.*$", "name": "comment.line.double-slash"}, {"match": "\\b(const|static|explicit|struct|typedef)\\b", "name": "storage.modifier"}, {"match": "\\b(true|false)\\b", "name": "constant.language"}, {"begin": "/\\*", "end": "\\*/", "name": "comment.block"}, {"match": "\".*?(?<!\\\\)\"", "name": "string.quoted.double"}, {"match": "'.*?(?<!\\\\)'", "name": "string.quoted.single"}, {"match": "\\b(if|else|while|for|do|break|return|continue|unravel)\\b", "name": "keyword.control"}, {"match": "\\b(new|cast|ecast|init)\\b", "name": "keyword.operator"}, {"match": "\\b(import|include|as|access|from|operator|quote)\\b", "name": "keyword.other"}, {"match": "\\b(\\d*)(\\.?)\\d+", "name": "constant.numeric"}, {"match": "\\b([a-zA-Z_]\\w*)\\s*\\(", "captures": {"1": {"name": "entity.name.function"}}}, {"begin": "\\b(quote)\\s*\\{", "end": "\\}", "patterns": [{"include": "$self"}]}, {"include": "#const_keywords"}, {"include": "#type_keywords"}, {"include": "#operator_keywords"}, {"include": "#prim_type_keywords"}]}
